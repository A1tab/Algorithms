# Алгоритм Кнута-Морриса-Пратта. КМП решает задачу поиска текстового фрагмента(образа) в тексте/строке 

def KMP(t, a):
    n = len(a); m = len(t)
    p = [0] * m                # р Содержит макс длины суффиксов совпадающих соответственным префиксам. Чтобы КМП работал корректно  
    p[0] = 0; j = 0; i = 1          # сдвигать образ нужно по макс префиксу
    while i < m:
        if t[i] != t[j]:
            if j == 0:
                p[i] = 0
                i += 1
            else:
                j = p[j-1]          # Образ отъедет назад, а i нет, и на след цикле сравним образ с прошлой позиции с текущим t[i]
        else:
            p[i] = j + 1
            i += 1
            j += 1
    i = 0; j = 0
    while i < n:
        if a[i] == t[j]:
            i += 1
            j += 1
            if j == m:
                return 'найдено'
        else:
            if j > 0:
                j = p[j-1]
            else:
                i += 1
    if i == n:
        return 'не найдено'


a = 'sdfqwdfacafacafcacacacccacaccacacacaccaaccacacлилилиилиллилила'

a1 = 'accaacca'
a2 = 'лилила'
a3 = '0'

print(KMP(a2, a))